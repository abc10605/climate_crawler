# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ClimateDataCrawler.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
import datetime
import os

from PyQt5 import QtCore, QtGui, QtWidgets
import Crawler
from DateRange import DayRange, MonthRange


class Ui_MainWindow(object):
    def __init__(self):
        self.__yesterday = datetime.datetime.today() - datetime.timedelta(1)
        self.__theDayBeforeYesterday = self.__yesterday - datetime.timedelta(1)
        self.__reportType = 'daily'
        self.__dateType = 'specific'
        self.__download_dir = __file__[:-7]
        self.__driver_dir = ""

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(467, 624)
        MainWindow.setAutoFillBackground(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.executeBtn = QtWidgets.QPushButton(self.centralwidget)
        self.executeBtn.setGeometry(QtCore.QRect(160, 510, 151, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.executeBtn.setFont(font)
        self.executeBtn.setAutoFillBackground(True)
        self.executeBtn.setAutoDefault(False)
        self.executeBtn.setDefault(False)
        self.executeBtn.setFlat(False)
        self.executeBtn.setObjectName("executeBtn")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(20, 20, 431, 90))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setObjectName("groupBox_2")
        self.dailyReport = QtWidgets.QRadioButton(self.groupBox_2)
        self.dailyReport.setGeometry(QtCore.QRect(20, 40, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.dailyReport.setFont(font)
        self.dailyReport.setChecked(True)
        self.dailyReport.setObjectName("dailyReport")
        self.monthlyReport = QtWidgets.QRadioButton(self.groupBox_2)
        self.monthlyReport.setGeometry(QtCore.QRect(150, 40, 151, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.monthlyReport.setFont(font)
        self.monthlyReport.setObjectName("monthlyReport")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(20, 130, 431, 166))
        self.groupBox.setMinimumSize(QtCore.QSize(0, 166))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.dateSpecific = QtWidgets.QRadioButton(self.groupBox)
        self.dateSpecific.setGeometry(QtCore.QRect(20, 50, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.dateSpecific.setFont(font)
        self.dateSpecific.setChecked(True)
        self.dateSpecific.setObjectName("dateSpecific")
        self.dateRange = QtWidgets.QRadioButton(self.groupBox)
        self.dateRange.setGeometry(QtCore.QRect(20, 100, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.dateRange.setFont(font)
        self.dateRange.setObjectName("dateRange")
        self.specificDate = QtWidgets.QDateEdit(self.groupBox)
        self.specificDate.setGeometry(QtCore.QRect(140, 50, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.specificDate.setFont(font)
        self.specificDate.setMaximumDate(QtCore.QDate(
            self.__yesterday.year, self.__yesterday.month, self.__yesterday.day))
        self.specificDate.setMinimumDate(QtCore.QDate(2005, 1, 1))
        self.specificDate.setCalendarPopup(True)
        self.specificDate.setDate(QtCore.QDate(
            self.__yesterday.year, self.__yesterday.month, self.__yesterday.day))
        self.specificDate.setObjectName("specificDate")
        self.dateRange_start = QtWidgets.QDateEdit(self.groupBox)
        self.dateRange_start.setGeometry(QtCore.QRect(139, 100, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.dateRange_start.setFont(font)
        self.dateRange_start.setMaximumDate(QtCore.QDate(
            self.__yesterday.year, self.__yesterday.month, self.__yesterday.day))
        self.dateRange_start.setMinimumDate(QtCore.QDate(2005, 1, 1))
        self.dateRange_start.setCalendarPopup(True)
        self.dateRange_start.setDate(QtCore.QDate(
            self.__theDayBeforeYesterday.year, self.__theDayBeforeYesterday.month, self.__theDayBeforeYesterday.day))
        self.dateRange_start.setObjectName("dateRange_start")
        self.dateRange_end = QtWidgets.QDateEdit(self.groupBox)
        self.dateRange_end.setGeometry(QtCore.QRect(299, 100, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.dateRange_end.setFont(font)
        self.dateRange_end.setMaximumDate(QtCore.QDate(
            self.__yesterday.year, self.__yesterday.month, self.__yesterday.day))
        self.dateRange_end.setMinimumDate(
            QtCore.QDate(self.dateRange_start.date()))
        self.dateRange_end.setCalendarPopup(True)
        self.dateRange_end.setDate(QtCore.QDate(
            self.__yesterday.year, self.__yesterday.month, self.__yesterday.day))
        self.dateRange_end.setObjectName("dateRange_end")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(260, 100, 31, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(30, 350, 381, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.lineEdit.setFont(font)
        self.lineEdit.setReadOnly(True)
        self.lineEdit.setObjectName("lineEdit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 310, 151, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.toolButton = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton.setGeometry(QtCore.QRect(420, 350, 31, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.toolButton.setFont(font)
        self.toolButton.setPopupMode(QtWidgets.QToolButton.DelayedPopup)
        self.toolButton.setArrowType(QtCore.Qt.NoArrow)
        self.toolButton.setObjectName("toolButton")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 400, 281, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(30, 450, 381, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.toolButton_2 = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton_2.setGeometry(QtCore.QRect(420, 450, 31, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.toolButton_2.setFont(font)
        self.toolButton_2.setObjectName("toolButton_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 467, 24))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.executeBtn.clicked.connect(self.__execute)
        self.dailyReport.clicked.connect(self.__daily)
        self.monthlyReport.clicked.connect(self.__monthly)
        self.dateSpecific.clicked.connect(self.__date_specific)
        self.specificDate.dateChanged.connect(self.__path_text)
        self.dateRange.clicked.connect(self.__date_range)
        self.dateRange_start.dateChanged.connect(self.__path_text)
        self.dateRange_start.dateChanged.connect(self.__date_range_end)
        self.dateRange_end.dateChanged.connect(self.__path_text)
        self.toolButton.clicked.connect(self.__open_download_dialog)
        self.toolButton_2.clicked.connect(self.__open_driver_dialog)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        try:
            self.__download_dir = open(os.path.join(os.path.dirname(
                os.path.realpath(__file__)), 'path.txt'), 'r').readlines()[0].replace('\n', '')
            self.__driver_dir = open(os.path.join(os.path.dirname(
                os.path.realpath(__file__)), 'path.txt'), 'r').readlines()[1]
            self.__path_text()
            self.lineEdit_2.setText(os.path.realpath(self.__driver_dir))
        except:
            self.__path_text()
        self.specificDate.setEnabled(True)
        self.dateRange_start.setEnabled(False)
        self.dateRange_end.setEnabled(False)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "氣象資料爬蟲程式"))
        self.executeBtn.setText(_translate("MainWindow", "執行"))
        self.groupBox_2.setTitle(_translate("MainWindow", "選擇報表"))
        self.dailyReport.setText(_translate("MainWindow", "日報表"))
        self.monthlyReport.setText(_translate("MainWindow", "月報表"))
        self.groupBox.setTitle(_translate("MainWindow", "選擇日期"))
        self.dateSpecific.setText(_translate("MainWindow", "指定日期"))
        self.dateRange.setText(_translate("MainWindow", "日期區間"))
        self.specificDate.setDisplayFormat(
            _translate("MainWindow", "yyyy-MM-dd"))
        self.dateRange_start.setDisplayFormat(
            _translate("MainWindow", "yyyy-MM-dd"))
        self.dateRange_end.setDisplayFormat(
            _translate("MainWindow", "yyyy-MM-dd"))
        self.label_3.setText(_translate("MainWindow", " 至"))
        self.lineEdit.setText(_translate("MainWindow", ""))
        self.label.setText(_translate("MainWindow", "下載路徑"))
        self.toolButton.setText(_translate("MainWindow", "..."))
        self.label_2.setText(_translate("MainWindow", "chromedriver.exe路徑"))
        self.lineEdit_2.setText(_translate("MainWindow", ""))
        self.toolButton_2.setText(_translate("MainWindow", "..."))

    def __execute(self):
        self.__path_text()
        Crawler.Crawler(self.__reportType, self.__date,
                        self.__get_download_dir(), self.__get_driver_dir())

    def __daily(self):
        self.__reportType = 'daily'
        _translate = QtCore.QCoreApplication.translate
        self.specificDate.setDisplayFormat(
            _translate("MainWindow", "yyyy-MM-dd"))
        self.dateRange_start.setDisplayFormat(
            _translate("MainWindow", "yyyy-MM-dd"))
        self.dateRange_end.setDisplayFormat(
            _translate("MainWindow", "yyyy-MM-dd"))
        self.__path_text()

    def __monthly(self):
        self.__reportType = 'monthly'
        _translate = QtCore.QCoreApplication.translate
        self.specificDate.setDisplayFormat(_translate("MainWindow", "yyyy-MM"))
        self.dateRange_start.setDisplayFormat(
            _translate("MainWindow", "yyyy-MM"))
        self.dateRange_end.setDisplayFormat(
            _translate("MainWindow", "yyyy-MM"))
        self.__path_text()

    def __date_specific(self):
        self.__dateType = 'specific'
        self.specificDate.setEnabled(True)
        self.dateRange_start.setEnabled(False)
        self.dateRange_end.setEnabled(False)
        self.__path_text()

    def __date_range(self):
        self.__dateType = 'range'
        self.specificDate.setEnabled(False)
        self.dateRange_start.setEnabled(True)
        self.dateRange_end.setEnabled(True)
        self.__path_text()

    def __date_(self):
        self.__specific_date = self.specificDate.date().toPyDate()
        if self.__dateType == 'specific' and self.__reportType == 'daily':
            self.__date = [f'{self.__specific_date}']
            self.__date_lineEdit = self.__date[0].replace('-', '')
        elif self.__dateType == 'specific' and self.__reportType == 'monthly':
            self.__date = [
                f'{self.__specific_date.year}-{self.__specific_date.month}']
            self.__date_lineEdit = self.__date[0].replace('-', '')
        elif self.__dateType == 'range' and self.__reportType == 'daily':
            self.__date = list(
                DayRange(self.dateRange_start.date(), self.dateRange_end.date()))
            self.__date_lineEdit = f'{self.__date[0].replace("-", "")}-{self.__date[-1].replace("-", "")}'
        else:
            self.__date = list(MonthRange(
                self.dateRange_start.date(), self.dateRange_end.date()))
            self.__date_lineEdit = f'{self.__date[0][:7].replace("-", "")}-{self.__date[-1][:7].replace("-", "")}'

    def __path_text(self):
        self.__date_()
        self.lineEdit.setText(os.path.realpath(
            os.path.join(self.__download_dir, self.__reportType, self.__date_lineEdit)))

    def __open_download_dialog(self):
        self.__download_dir = str(QtWidgets.QFileDialog.getExistingDirectory())
        open(os.path.join(os.path.dirname(os.path.realpath(__file__)),
                          'path.txt'), 'w').write(f'{self.__download_dir}\n{self.__driver_dir}')
        self.__path_text()

    def __open_driver_dialog(self):
        self.__driver_dir = QtWidgets.QFileDialog.getOpenFileName()[0]
        open(os.path.join(os.path.dirname(os.path.realpath(__file__)),
                          'path.txt'), 'w').write(f'{self.__download_dir}\n{self.__driver_dir}')
        self.lineEdit_2.setText(os.path.realpath(self.__driver_dir))

    def __date_range_end(self):
        self.dateRange_end.setMinimumDate(
            QtCore.QDate(self.dateRange_start.date()))

    def __get_driver_dir(self):
        return self.lineEdit_2.text()

    def __get_download_dir(self):
        return os.path.realpath(self.__download_dir)


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
